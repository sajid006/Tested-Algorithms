
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define filein freopen("in.txt","r",stdin)
#define fileout freopen("out.txt","w",stdout)
#define all(v) v.begin(),v.end()
#define ff first
#define ss second
#define mod 1000000007
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define pll pair<ll,ll>
#define mx 200005
ll ara[mx],BIT[mx],n;

void updatepoint(ll index,ll val)
{
    while(index <= n)
    {
        BIT[index]+=val;
        index=index + (index & -index);
    }
}

void updaterange(ll left,ll right,ll val)
{
    updatepoint(left,val);
    updatepoint(right+1,-val);
}

ll getSum(ll index)
{
    ll sum = 0;
    while(index > 0)
    {
        sum+=BIT[index];
        index=index - (index & -index);;
    }
    return sum;
}

void createtree()
{
    ll i,j;
    for(i=1;i<=n;i++)
    {
        j= i + (i & -i);
        if(j<=n)BIT[j]+=BIT[i];
    }
}

int main()
{

    ll i,j,x;
    scanf("%lld",&n);
    for(i=1;i<=n;i++)
    {
        scanf("%lld",&ara[i]);
        BIT[i]=ara[i];
    }
    createtree();
    //cout<<"Created"<<endl;
    ll q,a,b;
    for(i=1;i<=n;i++)printf("%lld\n",BIT[i]);
    scanf("%lld",&q);

    while(q--)
    {
        scanf("%lld %lld",&a,&b);
        if(a==0)printf("%lld\n",getSum(b));
        else printf("%lld\n",getSum(b)-getSum(a-1));
    }
    return 0;
}
